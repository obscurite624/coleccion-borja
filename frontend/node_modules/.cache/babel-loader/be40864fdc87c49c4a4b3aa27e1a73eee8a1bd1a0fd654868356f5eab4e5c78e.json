{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\n// Assume getData is a function that fetches data from your server\nconst getData = async () => {\n  // Fetch data from your server\n  // For example:\n  const response = await fetch('http://localhost:3030/getData');\n  const data = await response.json();\n  return data;\n};\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState: [],\n  reducers: {\n    setProducts: (state, action) => {\n      return action.payload;\n    },\n    addProduct: (state, action) => {\n      const existingProductIndex = state.findIndex(product => product.id === action.payload.id);\n      if (existingProductIndex === -1) {\n        state.push(action.payload);\n      } else {\n        // Update the existing product instead of ignoring\n        state[existingProductIndex] = action.payload;\n      }\n    },\n    deleteProduct: (state, action) => {\n      // Remove the product from the state\n      state = state.filter(product => product.id !== action.payload);\n    }\n  }\n});\nexport const {\n  setProducts,\n  addProduct,\n  deleteProduct\n} = productsSlice.actions;\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","getData","response","fetch","data","json","productsSlice","name","initialState","reducers","setProducts","state","action","payload","addProduct","existingProductIndex","findIndex","product","id","push","deleteProduct","filter","actions","reducer"],"sources":["C:/Users/borja/Documents/clase/dad/ProyectosReact/coleccion-borja/frontend/src/store/storeProducts.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// Assume getData is a function that fetches data from your server\r\nconst getData = async () => {\r\n    // Fetch data from your server\r\n    // For example:\r\n    const response = await fetch('http://localhost:3030/getData');\r\n    const data = await response.json();\r\n    return data;\r\n};\r\n\r\nconst productsSlice = createSlice({\r\n    name: 'products',\r\n    initialState: [],\r\n    reducers: {\r\n        setProducts: (state, action) => {\r\n            return action.payload;\r\n        },\r\n        addProduct: (state, action) => {\r\n            const existingProductIndex = state.findIndex(product => product.id === action.payload.id);\r\n\r\n            if (existingProductIndex === -1) {\r\n                state.push(action.payload);\r\n            } else {\r\n                // Update the existing product instead of ignoring\r\n                state[existingProductIndex] = action.payload;\r\n            }\r\n        },\r\n\r\n        deleteProduct: (state, action) => {\r\n            // Remove the product from the state\r\n            state = state.filter(product => product.id !== action.payload);\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setProducts, addProduct, deleteProduct } = productsSlice.actions;\r\nexport default productsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EACxB;EACA;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;EAC7D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC;AAED,MAAME,aAAa,GAAGN,WAAW,CAAC;EAC9BO,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,OAAOA,MAAM,CAACC,OAAO;IACzB,CAAC;IACDC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMG,oBAAoB,GAAGJ,KAAK,CAACK,SAAS,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EAAE,CAAC;MAEzF,IAAIH,oBAAoB,KAAK,CAAC,CAAC,EAAE;QAC7BJ,KAAK,CAACQ,IAAI,CAACP,MAAM,CAACC,OAAO,CAAC;MAC9B,CAAC,MAAM;QACH;QACAF,KAAK,CAACI,oBAAoB,CAAC,GAAGH,MAAM,CAACC,OAAO;MAChD;IACJ,CAAC;IAEDO,aAAa,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC9B;MACAD,KAAK,GAAGA,KAAK,CAACU,MAAM,CAACJ,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAAC;IAClE;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,WAAW;EAAEI,UAAU;EAAEM;AAAc,CAAC,GAAGd,aAAa,CAACgB,OAAO;AAC/E,eAAehB,aAAa,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}